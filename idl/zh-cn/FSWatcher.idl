/*! @brief 文件系统观察对象

 当调用 `fs.watch(target)` 成功时, 返回该类型对象
 ```JavaScript
 var fs = require("fs");
 var watcher = fs.watch((eventType, filename) => {
    if (filename) {
      console.log(filename);
      // Prints: <Buffer ...>
    }
 });

 watcher.close();

 // 带回调地调用
 fs.watch('./tmp', { encoding: 'buffer' }, (eventType, filename) => {
  if (filename) {
    console.log(filename);
    // Prints: <Buffer ...>
  }
});
 ```
*/
interface FSWatcher : EventEmitter
{
    /*! @brief 查询和绑定"文件改变"事件，相当于 on("change", func); */
    Function onchange;

    /*! @brief 查询和绑定"watcher 关闭"的事件，相当于 on("close", func); */
    Function onclose;

    /*! @brief 查询和绑定"错误发生"的事件，相当于 on("error", func); */
    Function onerror;

    /*! @brief 关闭该 Watcher, 不再接收对应的文件变化处理事件 */
    close();
};
