
/*! @brief x509 证书对象

 X509Cert 对象属于 crypto 模块，创建：
 ```JavaScript
 var k = new crypto.X509Cert();
 ```
 */
interface X509Cert : object
{
    /*! @brief X509Cert 构造函数 */
    X509Cert();

    /*! @brief 加载一个 DER 格式的证书，可多次调用
     @param derCert DER 格式的证书
    */
    load(Buffer derCert);

    /*! @brief 加载一个 CRT/PEM/TXT 格式的证书，可多次调用

    load 加载 mozilla 的 certdata,txt， 可于 http://hg.mozilla.org/releases/mozilla-release/raw-file/default/security/nss/lib/ckfw/builtins/certdata.txt 下载使用
     @param txtCert PEM 格式的证书
    */
    load(String txtCert);

    /*! @brief 加载一个 CRT/PEM/DER/TXT 格式的证书，可多次调用

    loadFile 加载 mozilla 的 certdata,txt， 可于 http://hg.mozilla.org/releases/mozilla-release/raw-file/default/security/nss/lib/ckfw/builtins/certdata.txt 下载使用
     @param filename 证书文件名
    */
    loadFile(String filename);

    /*! @brief 加载自带的缺省根证书
    此证书内容源自：http://hg.mozilla.org/releases/mozilla-release/raw-file/default/security/nss/lib/ckfw/builtins/certdata.txt */
    loadRootCerts();

    /*! @brief 使用当前证书链验证给定的证书
     @param cert 给定需要验证的证书
     @return 如果验证成功则返回 True
    */
    Boolean verify(X509Cert cert) async;

    /*! @brief 导出已经加载的证书
     @return 以数组方式导出证书链
    */
    Array dump();

    /*! @brief 清空已经加载的证书 */
    clear();

    /*! @brief 获取证书的版本 */
    readonly Integer version;

    /*! @brief 获取证书的序列号 */
    readonly String serial;

    /*! @brief 获取证书颁发者的可分辨名称 */
    readonly String issuer;

    /*! @brief 获取证书的主题可分辨名称 */
    readonly String subject;

    /*! @brief 获取证书的生效时间 */
    readonly Date notBefore;

    /*! @brief 获取证书的到期时间 */
    readonly Date notAfter;

    /*! @brief 获取证书是否是 ca 证书 */
    readonly Boolean ca;

    /*! @brief 获取证书的 pathlen */
    readonly Integer pathlen;

    /*! @brief 获取证书的使用范围

    结果为全部或部分以下内容：digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment, keyAgreement, keyCertSign, cRLSign
    */
    readonly String usage;

    /*! @brief 获取证书的 Netscape 证书类型

    结果为全部或部分以下内容：client, server, email, objsign, reserved, sslCA, emailCA, objCA
     */
    readonly String type;

    /*! @brief 获取证书的公钥 */
    readonly PKey publicKey;

    /*! @brief 获取证书链中得下一个证书 */
    readonly X509Cert next;
};
