/*! @brief 图像文件处理模块

 基础模块。可用于创建和操作图像文件，引用方式：
 ```JavaScript
 var gd = require('gd');
 ```
 */
module gd
{
    /*! @brief 图像格式常量，标示当前图像来源为未知 */
    const NONE = 0;

    /*! @brief 图像格式常量，标示当前图像来源为 jpeg 格式数据 */
    const JPEG = 1;

    /*! @brief 图像格式常量，标示当前图像来源为 gif 格式数据 */
    const GIF = 2;

    /*! @brief 图像格式常量，标示当前图像来源为 png 格式数据 */
    const PNG = 3;

    /*! @brief 图像格式常量，标示当前图像来源为 tiff 格式数据 */
    const TIFF = 4;

    /*! @brief 图像格式常量，标示当前图像来源为 bmp 格式数据 */
    const BMP = 5;

    /*! @brief 图像格式常量，标示当前图像来源为 webp 格式数据 */
    const WEBP = 6;

    /*! @brief 图像类型常量，标示当前图像为真彩色图像 */
    const TRUECOLOR = 0;

    /*! @brief 图像类型常量，标示当前图像为调色板图像 */
    const PALETTE = 1;

    /*! @brief 扇形绘制样式，绘制一条连接开始和结束点的圆弧 */
    const ARC = 0;

    /*! @brief 扇形绘制样式，绘制一条连接原点，开始和结束点的直线 */
    const CHORD = 1;

    /*! @brief 扇形绘制样式，绘制不填充的扇形 */
    const NOFILL = 2;

    /*! @brief 扇形绘制样式，绘制一条连接起点和终点的弧和连接原点的直线 */
    const EDGED = 4;

    /*! @brief 镜像方向，横向做镜像处理 */
    const HORIZONTAL = 1;

    /*! @brief 镜像方向，纵向做镜像处理 */
    const VERTICAL = 2;

    /*! @brief 镜像方向，横向和纵向都做镜像处理 */
    const BOTH = 3;

    /*! @brief 旋转方向，向左旋转 */
    const LEFT = 1;

    /*! @brief 旋转方向，向右旋转 */
    const RIGHT = 2;

    /*! @brief 滤波器类型：用平均移除法来达到轮廓效果*/
    const MEAN_REMOVAL = 0;

    /*! @brief 滤波器类型：用边缘检测来突出图像的边缘 */
    const EDGEDETECT = 1;

    /*! @brief 滤波器类型：使图像浮雕化 */
    const EMBOSS = 2;

    /*! @brief 滤波器类型：模糊图像 */
    const SELECTIVE_BLUR = 3;

    /*! @brief 滤波器类型：用高斯算法模糊图像 */
    const GAUSSIAN_BLUR = 4;

    /*! @brief 滤波器类型：将图像中所有颜色反转 */
    const NEGATE = 5;

    /*! @brief 滤波器类型：将图像转换为灰度图 */
    const GRAYSCALE = 6;

    /*! @brief 滤波器类型：使图像更柔滑，用arg1设定柔滑级别 */
    const SMOOTH = 7;

    /*! @brief 滤波器类型：改变图像的亮度，用arg1设定亮度级别，取值范围是-255~255 */
    const BRIGHTNESS = 8;

    /*! @brief 滤波器类型：改变图像的对比度，用arg1设定对比度级别，取值范围是0~100 */
    const CONTRAST = 9;

    /*! @brief 滤波器类型：改变图像的色调，用arg1、arg2、arg3分别指定red、blue、green，每种颜色范围是0~255，arg4为透明度，取值返回是0~127 */
    const COLORIZE = 10;

    /*! @brief 创建一个新图像
     @param width 指定图像宽度
     @param height 指定图像高度
     @param color 指定图像类型，允许值为 gd.TRUECOLOR 或 gd.PALETTE
     @return 返回创建成功的图像对象
     */
    static Image create(Integer width, Integer height, Integer color = gd.TRUECOLOR) async;

    /*! @brief 从格式数据中解码图像
     @param data 给定解码的图像数据
     @return 返回解码成功的图像对象
     */
    static Image load(Buffer data) async;

    /*! @brief 从流对象中解码图像
     @param stm 给定图像数据所在的流对象
     @return 返回解码成功的图像对象
     */
    static Image load(SeekableStream stm) async;

    /*! @brief 从指定文件中解码图像
     @param fname 指定文件名
     @return 返回解码成功的图像对象
     */
    static Image load(String fname) async;

    /*! @brief 通过 rgb 颜色分量生成组合颜色
     @param red 红色分量，范围为 0-255
     @param green 绿色分量，范围为 0-255
     @param blue 蓝色分量，范围为 0-255
     @return 返回组合颜色
     */
    static Integer rgb(Integer red, Integer green, Integer blue);

    /*! @brief 通过 rgba 颜色分量生成组合颜色
     @param red 红色分量，范围为 0-255
     @param green 绿色分量，范围为 0-255
     @param blue 蓝色分量，范围为 0-255
     @param alpha 透明分量，范围为 0.0-1.0
     @return 返回组合颜色
     */
    static Integer rgba(Integer red, Integer green, Integer blue, Number alpha);

    /*! @brief 通过 hsl 颜色分量生成组合颜色
     @param hue 色相分量，范围为 0-360
     @param saturation 饱和度分量，范围为 0.0-1.0
     @param lightness 亮度分量，范围为 0.0-1.0
     @return 返回组合颜色
     */
    static Integer hsl(Number hue, Number saturation, Number lightness);

    /*! @brief 通过 hsla 颜色分量生成组合颜色
     @param hue 色相分量，范围为 0-360
     @param saturation 饱和度分量，范围为 0.0-1.0
     @param lightness 亮度分量，范围为 0.0-1.0
     @param alpha 透明分量，范围为 0.0-1.0
     @return 返回组合颜色
     */
    static Integer hsla(Number hue, Number saturation, Number lightness, Number alpha);

    /*! @brief 通过 hsb 颜色分量生成组合颜色
     @param hue 色相分量，范围为 0-360
     @param saturation 饱和度分量，范围为 0.0-1.0
     @param brightness 明亮程度分量，范围为 0.0-1.0
     @return 返回组合颜色
     */
    static Integer hsb(Number hue, Number saturation, Number brightness);

    /*! @brief 通过 hsba 颜色分量生成组合颜色
     @param hue 色相分量，范围为 0-360
     @param saturation 饱和度分量，范围为 0.0-1.0
     @param brightness 明亮程度分量，范围为 0.0-1.0
     @param alpha 透明分量，范围为 0.0-1.0
     @return 返回组合颜色
     */
    static Integer hsba(Number hue, Number saturation, Number brightness, Number alpha);

    /*! @brief 通过字符串生成组合颜色
     @param color 指定颜色的字符串，如："#ff0000", "ff0000", "#f00", "f00"
     @return 返回组合颜色
     */
    static Integer color(String color);
};
