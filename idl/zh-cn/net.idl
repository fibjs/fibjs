
/*! @brief 网络访问模块

 基础模块。可用于创建和操作网络资源，引用方式：
 ```JavaScript
 var net = require('net');
 ```
 */
module net
{
    /*! @brief 地址集常量，指定 ipv4*/
    const AF_INET = 2;

    /*! @brief 地址集常量，指定 ipv6*/
    const AF_INET6 = 10;

    /*! @brief 协议族常量，指定 tcp*/
    const SOCK_STREAM = 1;

    /*! @brief 协议族常量，指定 udp*/
    const SOCK_DGRAM = 2;

    /*! @brief 查询当前运行环境网络信息
     @return 返回网卡信息
    */
    static Object info();

    /*! @brief 查询给定的主机名的地址
     @param name 指定主机名
     @param family 指定查询返回类型，缺省为 AF_INET
     @return 返回查询的 ip 字符串
     */
    static String resolve(String name, Integer family = AF_INET) async;

    /*! @brief 快速查询的主机地址，等效与 resolve(name)
     @param name 指定主机名
     @return 返回查询的 ip 字符串
     */
    static String ip(String name) async;

    /*! @brief 快速查询的主机 ipv6 地址，等效与 resolve(name, net.AF_INET6)
     @param name 指定主机名
     @return 返回查询的 ipv6 字符串
     */
    static String ipv6(String name) async;

    /*! @brief 创建一个 Socket 对象，参见 Socket */
    static Socket;

    /*! @brief 创建一个 Socket 对象并建立连接，参见 Socket
     @param host 指定对方地址或主机名
     @param port 指定对方端口
     @param timeout 指定超时时间，单位是毫秒，默认为0
     @param family 指定地址集，缺省为 AF_INET，ipv4
     @return 返回连接成功的 Socket 对象
     */
    static Stream connect(String host, Integer port, Integer timeout = 0, Integer family = net.AF_INET) async;

    /*! @brief 创建一个 Socket 或 SslSocket 对象并建立连接
     @param url 指定连接的协议，可以是：tcp://host:port 或者 ssl://host:port
     @param timeout 指定超时时间，单位是毫秒，默认为0
     @return 返回连接成功的 Socket 或者 SslSocket 对象
     */
    static Stream connect(String url, Integer timeout = 0) async;

    /*! @brief 创建一个 Smtp 对象，参见 Smtp */
    static Smtp;

    /*! @brief 创建一个 Smtp 对象并建立连接，参见 Smtp
     @param url 指定连接的协议，可以是：tcp://host:port 或者 ssl://host:port
     @param timeout 指定超时时间，单位是毫秒，默认为0
     @return 返回连接成功的 Smtp 对象
     */
    static Smtp openSmtp(String url, Integer timeout = 0) async;

    /*! @brief 创建一个 TcpServer 对象，参见 TcpServer */
    static TcpServer;

    /*! @brief 创建一个 UrlObject 对象，参见 UrlObject */
    static UrlObject new Url();

    /*! @brief 查询当前系统异步网络引擎
     @return 返回网络引擎名称
    */
    static String backend();

    /*! @brief 检测输入是否是 IP 地址
     @return 非合法的 IP 地址，返回 0, 如果是 IPv4 则返回 4，如果是 IPv6 则返回 6
    */
    static Integer isIP(String ip = "");

    /*! @brief 检测输入是否是 IPv4 地址
     @return 如果是 IPv4 则返回 true.否则返回 false
    */
    static Boolean isIPv4(String ip = "");

    /*! @brief 检测输入是否是 IPv6 地址
     @return 如果是 IPv6 则返回 true.否则返回 false
    */
    static Boolean isIPv6(String ip = "");
};
