/*! @brief 输入输出处理模块

 使用方法：
 ```JavaScript
 var io = require('io');
 ```
 */
module io
{
    /*! @brief 创建一个内存流对象，参见 MemoryStream */
    static MemoryStream new MemoryStream();

    /*! @brief 创建一个缓存流读取对象，参见 BufferedStream */
    static BufferedStream new BufferedStream();

    /*! @brief 创建一个 Range 查询流读取对象，参见 RangeStream */
    static RangeStream new RangeStream();

    /*! @brief 复制流数据到目标流中
     @param from 源流对象
     @param to 目标流对象
     @param bytes 复制的字节数
     @return 返回复制的字节数
     */
    static Long copyStream(Stream from, Stream to, Long bytes = -1) async;

    /*! @brief 双向复制流数据，直到流中无数据，或者流被关闭
     @param stm1 流对象一
     @param stm2 流对象二
     */
    static bridge(Stream stm1, Stream stm2) async;
};
