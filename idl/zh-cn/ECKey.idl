/*! @brief 椭圆曲线加密算法对象 */
interface ECKey : PKey
{
    /*! @brief 通过 DER 格式的密钥构造 ECKey
     @param DerKey DER 格式的密钥
     @param password 解密密码
    */
    ECKey(Buffer DerKey, String password = "");

    /*! @brief 通过 PEM 格式的密钥构造 ECKey
     @param pemKey PEM 格式的密钥
     @param password 解密密码
    */
    ECKey(String pemKey, String password = "");

    /*! @brief 通过 JSON 格式的密钥构造 ECKey

     jsonKey 的格式支持以下两种，EC 私钥：
     ```JavaScript
     {
        "kty": "EC",
        "crv": "P-521",
        "x": "ATfNNFuuvlGxrTGoXgyfSAGgRNNDnO3rN3k74urKJdVS14RYhdnSwm91Bm-F1l-T1XKlAY2yRnzG9w1Ukvo8c0wL",
        "y": "ASBHqrruB6kdkEUB3vlW3-UIkk4HtKdUeTwN-7m3j2rgZvYR1ffRAapDvWqKGiBjomqWafxokBkbDI0c95f6f4XU",
        "d": "AfkIbUHXfW41njdpoKuqqKludcoLJS8D_oMEwkj-GVaXFNKccIoF5iKGu2c69kNDjo83R_7wyGlfRczsklkik1ST"
     }
     ```
     EC 公钥：
     ```JavaScript
     {
        "kty": "EC",
        "crv": "P-521",
        "x": "ATfNNFuuvlGxrTGoXgyfSAGgRNNDnO3rN3k74urKJdVS14RYhdnSwm91Bm-F1l-T1XKlAY2yRnzG9w1Ukvo8c0wL",
        "y": "ASBHqrruB6kdkEUB3vlW3-UIkk4HtKdUeTwN-7m3j2rgZvYR1ffRAapDvWqKGiBjomqWafxokBkbDI0c95f6f4XU"
     }
     ```
     @param jsonKey JSON 格式的密钥
    */
    ECKey(Object jsonKey);

    /*! @brief 返回当前算法的椭圆曲线名称 */
    readonly String curve;

    /*! @brief 从可恢复签名中恢复公钥，仅支持 secp256k1
     @param data 签名的原始数据
     @param sig 可恢复签名
     @return 返回包含公钥的对象
    */
    static ECKey recover(Buffer data, Buffer sig) async;

    /*! @brief 使用当前算法计算椭圆曲线 Diffie-Hellman (ECDH) 共享密钥
     @param publicKey 指定对方的公钥
     @return 返回计算出的共享密钥
     */
    Buffer computeSecret(ECKey publicKey) async;
};
