
/*! @brief http客户端对象
 
 http客户端对象模拟浏览器环境缓存cookie，并在访问url的时候携带对应的cookie，不同的http客户端对象是相互隔离的，提供http的request、get、post等方法。
 用法如下：

 ```JavaScript
 var http = require('http');
 var httpClient = new http.Client();
 httpClient.request('GET', 'http://fibjs.org');
 ```
 */
interface HttpClient : object
{
    /*! @brief HttpClient 构造函数，创建一个新的HttpClient对象 */
    HttpClient();

    /*! @brief 返回http客户端的 HttpCookie 对象列表 */
    readonly List cookies;

    /*! @brief 查询和设置超时时间 单位毫秒*/
    Integer timeout;

    /*! @brief cookie功能开关，默认开启 */
    Boolean enableCookie;

    /*! @brief 自动redirect功能开关，默认开启 */
    Boolean autoRedirect;

    /*! @brief 查询和设置 http 请求中的浏览器标识 */
    String userAgent;

    /*! @brief 发送 http 请求到指定的流对象，并返回结果
     @param conn 指定处理请求的流对象
     @param req 要发送的 HttpRequest 对象
     @return 返回服务器响应
     */
    HttpResponse request(Stream conn, HttpRequest req) async;

    /*! @brief 请求指定的 url，并返回结果
     @param method 指定 http 请求方法：GET, POST 等
     @param url 指定 url，必须是包含主机的完整 url
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse request(String method, String url, Object headers = {});

    /*! @brief 请求指定的 url，并返回结果
     @param method 指定 http 请求方法：GET, POST 等
     @param url 指定 url，必须是包含主机的完整 url
     @param body 指定发送的 body 内容
     @param headers 指定附加的 http 头
     @return 返回服务器响应
     */
    HttpResponse request(String method, String url, SeekableStream body, Map headers) async;

    /*! @brief 请求指定的 url，并返回结果
     @param method 指定 http 请求方法：GET, POST 等
     @param url 指定 url，必须是包含主机的完整 url
     @param body 指定发送的 body 内容
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse request(String method, String url, SeekableStream body, Object headers = {});

    /*! @brief 请求指定的 url，并返回结果
     @param method 指定 http 请求方法：GET, POST 等
     @param url 指定 url，必须是包含主机的完整 url
     @param body 指定发送的 body 内容
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse request(String method, String url, Buffer body, Object headers = {});

    /*! @brief 用 GET 方法请求指定的 url，并返回结果，等同于 request("GET", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse get(String url, Object headers = {});

    /*! @brief 用 POST 方法请求指定的 url，并返回结果，等同于 request("POST", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param body 指定发送的 body 内容
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse post(String url, SeekableStream body, Object headers = {});

    /*! @brief 用 POST 方法请求指定的 url，并返回结果，等同于 request("POST", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param body 指定发送的 body 内容
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse post(String url, Buffer body, Object headers = {});

    /*! @brief 用 POST 方法请求指定的 url，并返回结果，等同于 request("POST", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse post(String url, Object headers = {});

    /*! @brief 用 DELETE 方法请求指定的 url，并返回结果，等同于 request("DELETE", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse del(String url, Object headers = {});

    /*! @brief 用 PUT 方法请求指定的 url，并返回结果，等同于 request("PUT", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param body 指定发送的 body 内容
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse put(String url, SeekableStream body, Object headers = {});

    /*! @brief 用 PUT 方法请求指定的 url，并返回结果，等同于 request("PUT", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param body 指定发送的 body 内容
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse put(String url, Buffer body, Object headers = {});

    /*! @brief 用 PUT 方法请求指定的 url，并返回结果，等同于 request("PUT", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse put(String url, Object headers = {});

    /*! @brief 用 PATCH 方法请求指定的 url，并返回结果，等同于 request("PATCH", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param body 指定发送的 body 内容
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse patch(String url, SeekableStream body, Object headers = {});

    /*! @brief 用 PATCH 方法请求指定的 url，并返回结果，等同于 request("PATCH", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param body 指定发送的 body 内容
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse patch(String url, Buffer body, Object headers = {});

    /*! @brief 用 PATCH 方法请求指定的 url，并返回结果，等同于 request("PATCH", ...)
     @param url 指定 url，必须是包含主机的完整 url
     @param headers 指定附加的 http 头，缺省无附加头
     @return 返回服务器响应
     */
    HttpResponse patch(String url, Object headers = {});
};
