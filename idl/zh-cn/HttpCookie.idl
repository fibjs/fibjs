/*! @brief http Cookie 对象，用于添加和处理 cookie */
interface HttpCookie : object
{
    /*! @brief HttpCookie 构造函数，创建一个新的 HttpCookie 对象

     opts 可以设置的选项如下：
     ```JavaScript
     {
         "name": "", // 指定创建的 cookie 名称
         "value": "", // 指定创建的 cookie 值
         "expires": Date, // 指定创建的 cookie 过期时间
         "domain": "", // 指定创建的 cookie 的域名范围
         "path": "", // 指定创建的 cookie 的路径范围
         "secure": false, // 指定创建的 cookie 是否仅通过 https 传递
         "httpOnly": false, // 指定创建的 cookie 仅允许 http 请求
     }
     ```
     @param opts 指定创建的 cookie 的属性
    */
    HttpCookie(Object opts = {});

    /*! @brief HttpCookie 构造函数，创建一个新的 HttpCookie 对象

     opts 可以设置的选项如下：
     ```JavaScript
     {
         "expires": Date, // 指定创建的 cookie 过期时间
         "domain": "", // 指定创建的 cookie 的域名范围
         "path": "", // 指定创建的 cookie 的路径范围
         "secure": false, // 指定创建的 cookie 是否仅通过 https 传递
         "httpOnly": false, // 指定创建的 cookie 仅允许 http 请求
     }
     ```
     @param name 指定创建的 cookie 名称
     @param value 指定创建的 cookie 值
     @param opts 指定创建的 cookie 的其它属性
    */
    HttpCookie(String name, String value, Object opts = {});

    /*! @brief 解析给定的字符串，填充 cookie 对象
     @param header 指定需要解析的 header 字符串
    */
    parse(String header);

    /*! @brief 检测给定的 url 是否匹配当前设置
     @param url 指定测试的 url
     @return 匹配成功返回 true
    */
    Boolean match(String url);

    /*! @brief 查询和设置 cookie 名称 */
    String name;

    /*! @brief 查询和设置 cookie 的值 */
    String value;

    /*! @brief 查询和设置 cookie 的域名范围 */
    String domain;

    /*! @brief 查询和设置 cookie 的路径范围 */
    String path;

    /*! @brief 查询和设置 cookie 的过期时间 */
    Date expires;

    /*! @brief 查询和设置 cookie 是否仅允许 http 请求，缺省 false */
    Boolean httpOnly;

    /*! @brief 查询和设置 cookie 是否仅通过 https 传递，缺省 false */
    Boolean secure;
};
