/*! @brief 超文本传输协议模块，用以支持 http 协议处理，模块别名：https */
module http
{
    /*! @brief 创建一个 http 请求对象，参见 HttpRequest */
    static HttpRequest new Request();

    /*! @brief 创建一个 http 响应对象，参见 HttpResponse */
    static HttpResponse new Response();

    /*! @brief 创建一个 http cookie 对象，参见 HttpCookie */
    static HttpCookie new Cookie();

    /*! @brief 创建一个 http 服务器，参见 HttpServer */
    static HttpServer new Server();

    /*! @brief 创建一个 http 客户端，参见 HttpClient */
    static HttpClient new Client();

    /*! @brief 创建一个 https 服务器，参见 HttpsServer */
    static HttpsServer new HttpsServer();

    /*! @brief 创建一个 http 协议处理器对象，参见 HttpHandler */
    static HttpHandler new Handler();

    /*! @brief 创建一个 http 请求转发处理器对象，参见 HttpRepeater */
    static HttpRepeater new Repeater();

    /*! @brief 返回标准的 HTTP 响应状态码的集合，以及各自的简短描述。 */
    static readonly Array STATUS_CODES;

    /*! @brief 返回http客户端的 HttpCookie 对象列表 */
    static readonly NArray cookies;

    /*! @brief 查询和设置超时时间 */
    static Integer timeout;

    /*! @brief cookie 功能开关，默认开启 */
    static Boolean enableCookie;

    /*! @brief 自动 redirect 功能开关，默认开启 */
    static Boolean autoRedirect;

    /*! @brief 自动解压缩功能开关，默认开启 */
    static Boolean enableEncoding;

    /*! @brief 查询和设置 body 最大尺寸，以 MB 为单位，缺省为 -1，不限制尺寸 */
    static Integer maxBodySize;

    /*! @brief 查询和设置 http 请求中的浏览器标识 */
    static String userAgent;

    /*! @brief 查询和设置 keep-alive 最大缓存连接数，缺省 128 */
    static Integer poolSize;

    /*! @brief 查询和设置 keep-alive 缓存连接超时时间，缺省 10000 ms */
    static Integer poolTimeout;

    /*! @brief 查询和设置代理服务器 */
    static String proxyAgent;

    /*! @brief 创建一个 http 静态文件处理器，用以用静态文件响应 http 消息

     fileHandler 支持 gzip 预压缩，当请求接受 gzip 编码，且相同路径下 filename.ext.gz 文件存在时，将直接返回此文件，
     从而避免重复压缩带来服务器负载。
     @param root 文件根路径
     @param mimes 扩展 mime 设置
     @param autoIndex 是否支持浏览目录文件，缺省为 false，不支持
     @return 返回一个静态文件处理器用于处理 http 消息
     */
    static Handler fileHandler(String root, Object mimes = {}, Boolean autoIndex = false);

    /*! @brief 设定缺省客户端证书
    @param crt X509Cert 证书，用于客户端验证服务器
    @param key PKey 私钥，用于与客户端会话
   */
    static setClientCert(X509Cert crt, PKey key);

    /*! @brief 发送 http 请求到指定的流对象，并返回结果
     @param conn 指定处理请求的流对象
     @param req 要发送的 HttpRequest 对象
     @return 返回服务器响应
     */
    static HttpResponse request(Stream conn, HttpRequest req) async;

    /*! @brief 发送 http 请求到指定的流对象，并返回结果
     @param conn 指定处理请求的流对象
     @param req 要发送的 HttpRequest 对象
     @param response_body 指定 response.body 的流
     @return 返回服务器响应
     */
    static HttpResponse request(Stream conn, HttpRequest req, SeekableStream response_body) async;

    /*! @brief 请求指定的 url，并返回结果
     opts 包含请求的附加选项，支持的内容如下：
     ```JavaScript
     {
         "query": {},
         "body": SeekableStream | Buffer | String | {},
         "json": {},
         "pack": {},
         "headers": {},
         "response_body": SeekableStream //指定接受 resposne 数据的流
     }
     ```
     其中 body，json，pack 不得同时出现。缺省为 {}，不包含任何附加信息
     @param method 指定 http 请求方法：GET, POST 等
     @param url 指定 url，必须是包含主机的完整 url
     @param opts 指定附加信息
     @return 返回服务器响应
     */
    static HttpResponse request(String method, String url, Object opts = {}) async;

    /*! @brief 用 GET 方法请求指定的 url，并返回结果，等同于 request("GET", ...)
     opts 包含请求的附加选项，支持的内容如下：
     ```JavaScript
     {
         "query": {},
         "body": SeekableStream | Buffer | String | {},
         "json": {},
         "pack": {},
         "headers": {}
     }
     ```
     其中 body，json，pack 不得同时出现。缺省为 {}，不包含任何附加信息
     @param url 指定 url，必须是包含主机的完整 url
     @param opts 指定附加信息
     @return 返回服务器响应
     */
    static HttpResponse get(String url, Object opts = {}) async;

    /*! @brief 用 POST 方法请求指定的 url，并返回结果，等同于 request("POST", ...)
     opts 包含请求的附加选项，支持的内容如下：
     ```JavaScript
     {
         "query": {},
         "body": SeekableStream | Buffer | String | {},
         "json": {},
         "pack": {},
         "headers": {}
     }
     ```
     其中 body，json，pack 不得同时出现。缺省为 {}，不包含任何附加信息
     @param url 指定 url，必须是包含主机的完整 url
     @param opts 指定附加信息
     @return 返回服务器响应
     */
    static HttpResponse post(String url, Object opts = {}) async;

    /*! @brief 用 DELETE 方法请求指定的 url，并返回结果，等同于 request("DELETE", ...)
     opts 包含请求的附加选项，支持的内容如下：
     ```JavaScript
     {
         "query": {},
         "body": SeekableStream | Buffer | String | {},
         "json": {},
         "pack": {},
         "headers": {}
     }
     ```
     其中 body，json，pack 不得同时出现。缺省为 {}，不包含任何附加信息
     @param url 指定 url，必须是包含主机的完整 url
     @param opts 指定附加信息
     @return 返回服务器响应
     */
    static HttpResponse del(String url, Object opts = {}) async;

    /*! @brief 用 PUT 方法请求指定的 url，并返回结果，等同于 request("PUT", ...)
     opts 包含请求的附加选项，支持的内容如下：
     ```JavaScript
     {
         "query": {},
         "body": SeekableStream | Buffer | String | {},
         "json": {},
         "pack": {},
         "headers": {}
     }
     ```
     其中 body，json，pack 不得同时出现。缺省为 {}，不包含任何附加信息
     @param url 指定 url，必须是包含主机的完整 url
     @param opts 指定附加信息
     @return 返回服务器响应
     */
    static HttpResponse put(String url, Object opts = {}) async;

    /*! @brief 用 PATCH 方法请求指定的 url，并返回结果，等同于 request("PATCH", ...)
     opts 包含请求的附加选项，支持的内容如下：
     ```JavaScript
     {
         "query": {},
         "body": SeekableStream | Buffer | String | {},
         "json": {},
         "pack": {},
         "headers": {}
     }
     ```
     其中 body，json，pack 不得同时出现。缺省为 {}，不包含任何附加信息
     @param url 指定 url，必须是包含主机的完整 url
     @param opts 指定附加信息
     @return 返回服务器响应
     */
    static HttpResponse patch(String url, Object opts = {}) async;
};
