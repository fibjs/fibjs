/*! @brief 浏览器窗口对象 */
interface WebView : EventEmitter
{
    /*! @brief 设置 webview 的页面 html
	 @param html 设置的 html
	 */
    setHtml(String html) async;

    /*! @brief 打印当前窗口文档
	 @param mode 打印参数，0: 快速打印; 1: 标准打印; 2: 打印预览。缺省为 1
	 */
    print(Integer mode = 1) async;

    /*! @brief 关闭当前窗口 */
    close() async;

    /*! @brief 等待当前窗口关闭 */
    wait() async;

    /*! @brief 向 webview 内发送消息

	```JavaScript 
	// index.js
	var gui = require('gui');
	var webview = gui.open('fs:index.html');

	webview.postMessage("hello from fibjs");
	```

	```html
	// index.html
	<script>
	window.external.onmessage = function(msg){
		alert(msg); // 会出现内容为 'hello from fibjs' 的弹窗
	};
	</script>
	```

	 
	 @param msg 要发送的消息
	*/
    postMessage(String msg) async;

    /*! @brief 查询和设置窗口是否显示 */
    Boolean visible;

    /*! @brief 查询和绑定加载成功事件，相当于 on("load", func); */
    Function onload;

    /*! @brief 查询和绑定窗口移动事件，相当于 on("move", func); 

		```JavaScript 
		var gui = require('gui');
		var webview = gui.open('fs:index.html');

		webview.onmove = function(evt) {
			console.log(evt.left, evt.top);
		}
	 	```
	*/
    Function onmove;

    /*! @brief 查询和绑定窗口尺寸改变事件，相当于 on("size", func);

		```JavaScript
		var gui = require('gui');
		var webview = gui.open('fs:index.html');

		webview.onresize = function(evt) {
			console.log(evt.width, evt.height);
		}
		```
	*/
    Function onresize;

    /*! @brief 查询和绑定窗口关闭事件，相当于 on("close", func);
		```JavaScript
		var gui = require('gui');
		var webview = gui.open('fs:index.html');

		webview.onclose = function() {}
	 	```
	*/
    Function onclose;

    /*! @brief 查询和绑定接受 webview 内 postMessage 消息事件，相当于 on("message", func);
		```html
		// index.html
		<script>
		window.external.postMessage('hello from html')
		</script>
		```

		```JavaScript
		// index.js
		var gui = require('gui');
		var webview = gui.open('fs:index.html');

		webview.onmessage = function(msg) {
			console.log(msg); // 将会打印 'hello from html'
		}
		```
	*/
    Function onmessage;
};
