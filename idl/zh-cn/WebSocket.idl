/*! @brief WebSocket 包协议转换处理器

  用以将 Http 协议转换为 WebSocket 包协议消息。创建方式：
  ```JavaScript
  var ws = require("ws");

  var sock = new ws.WebSocket(...);
  ```
 */
interface WebSocket : EventEmitter
{
    /*! @brief WebSocket 构造函数
     @param url 指定连接的服务器
     @param protocol 指定握手协议，缺省为 ""
     @param origin 指定握手时模拟的源
    */
    WebSocket(String url, String protocol = "", String origin = "");

    /*! @brief 查询当前对象连接的服务器 */
    readonly String url;

    /*! @brief 查询当前对象连接时的协议 */
    readonly String protocol;

    /*! @brief 查询当前对象连接的源 */
    readonly String origin;

    /*! @brief 查询当前对象的连接状态，参见 ws */
    readonly Integer readyState;

    /*! @brief 关闭当前连接，此操作会向对方发送 CLOSE 数据包，并等待对方响应
     @param code 指定关闭的代码，允许值为 3000-4999 或者 1000，缺省为 1000
     @param reason 指定关闭的原因，缺省为 ""
    */
    close(Integer code = 1000, String reason = "");

    /*! @brief 向对方发送一段文本
     @param data 指定发送的文本
    */
    send(String data);

    /*! @brief 向对方发送一段二进制数据
     @param data 指定发送的二进制数据
    */
    send(Buffer data);

    /*! @brief 查询和绑定连接成功事件，相当于 on("open", func); */
    Function onopen;

    /*! @brief 查询和绑定接受到对方消息的事件，相当于 on("message", func); */
    Function onmessage;

    /*! @brief 查询和绑定连接关闭的事件，相当于 on("close", func); */
    Function onclose;

    /*! @brief 查询和绑定错误发生的事件，相当于 on("error", func); */
    Function onerror;
};
