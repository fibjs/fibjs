/*! @brief 提供对 SubtleCrypto API 的访问

SubtleCrypto API 模块提供了一组用于加密和解密的函数。可以通过 global.webcrypto.subtle 属性或者 require("crypto").webcrypto.subtle 来获取。
*/
module subtle
{
    /*! @brief 计算给定数据的哈希值

    @param algorithm 指定哈希算法
    @param data 指定要计算哈希值的数据
    @return 返回计算得到的哈希值
    */
    static Buffer digest(String algorithm, Buffer data) promise;

    /*! @brief 计算给定数据的哈希值

    algorithm 的 name 属性指定哈希算法，例如：
    ```
    {
        name: "SHA-256"
    }
    ```

    @param algorithm 指定哈希算法
    @param data 指定要计算哈希值的数据
    @return 返回计算得到的哈希值
    */
    static Buffer digest(Object algorithm, Buffer data) promise;

    /*! @brief 导出 key 的信息，如果 key 不可导出，则返回一个错误

    @param format 导出的格式，可以是 'raw'，'pkcs8'，'spki' 或 'jwk'.
    @param key 要导出的 key
    @return 返回导出的 key 信息
    */
    static Variant exportKey(String format, CryptoKey key) promise;

    /*! @brief 生成一个新的 key

    @param algorithm 指定生成 key 的算法
    @param extractable 指定 key 是否可以导出到外部
    @param usages 指定 key 的用途
    @return 返回生成的 key
    */
    static Variant generateKey(Object algorithm, Boolean extractable, Array usages) promise;

    /*! @brief 导入 key

    @param format 导入的格式，可以是 'raw'，'pkcs8'，'spki' 或 'jwk'.
    @param keyData 包含 key 数据的对象
    @param algorithm 指定 key 的算法
    @param extractable 指定 key 是否可以导出到外部
    @param usages 指定 key 的用途
    @return 返回导入的 key
    */
    static CryptoKey importKey(String format, Value keyData, Object algorithm, Boolean extractable, Array usages) promise;

    /*! @brief 使用 key 对数据进行签名

    @param algorithm 指定签名算法
    @param key 指定用于签名的 key
    @param data 指定要签名的数据
    @return 返回签名后的数据
    */
    static Buffer sign(Object algorithm, CryptoKey key, Buffer data) promise;

    /*! @brief 使用 key 对数据进行验签

    @param algorithm 指定签名算法
    @param key 指定用于验签的 key
    @param signature 指定签名数据
    @param data 指定要验签的数据
    @return 返回验签结果
    */
    static Boolean verify(Object algorithm, CryptoKey key, Buffer signature, Buffer data) promise;
};
