
/*! @brief ssl 协议转换处理器

 用以将数据流转换为 ssl 流协议。SslHandler 是对 SslSocket 的封装，用于构建服务器，逻辑上相当于：
 ```JavaScript
 var ss = new ssl.Socket(crt, key);

 function(s){
    var s1 = ss.accept(s);
    hdlr.invoke(s1);
    s1.close();
 }
 ```
 */
interface SslHandler : Handler
{
    /*! @brief SslHandler 构造函数，创建一个新的 SslHandler 对象

    certs 格式为：
    ```JavaScript
    [
        {
            crt: [X509Cert object],
            key: [PKey object]
        },
        {
            crt: [X509Cert object],
            key: [PKey object]
        }
    ]
    ```
    @param certs 服务器证书列表
    @param hdlr 内置消息处理器，处理函数，链式处理数组，路由对象，详见 mq.Handler
    */
    SslHandler(Array certs, Handler hdlr);

    /*! @brief SslHandler 构造函数，创建一个新的 SslHandler 对象
      @param crt X509Cert 证书，用于客户端验证服务器
      @param key PKey 私钥，用于与客户端会话
      @param hdlr 内置消息处理器，处理函数，链式处理数组，路由对象，详见 mq.Handler
     */
    SslHandler(X509Cert crt, PKey key, Handler hdlr);

    /*! @brief 设定证书验证模式，缺省为 VERIFY_NONE */
    Integer verification;

    /*! @brief 客户端证书验证证书链*/
    readonly X509Cert ca;

    /*! @brief ssl 协议转换处理器当前事件处理接口对象 */
    Handler handler;
};
