
/*! @brief 全局对象，所有脚本均可以访问的基础对象*/
class global : module
{
    /*! @brief 二进制数据缓存对象，用于 io 读写的数据处理，参见 Buffer 对象。*/
    static Buffer new Buffer();

    /*! @brief 控制台访问对象 */
    static readonly console console;

    /*! @brief 运行一个脚本
     @param fname 指定要运行的脚本路径
     */
    static run(String fname);

    /*! @brief 加载一个模块并返回模块对象，更多信息参阅 @ref module

     require 可用于加载基础模块，文件模块。

     基础模块是沙箱创建时初始化的模块，引用时只需传递相应的 id，比如 require("net")。

     文件模块是用户自定义模块，引用时需传递以 ./ 或 ../ 开头的相对路径。文件模块支持 .js 和 .json 文件。

     文件模块也支持 package.json 格式，当模块为目录结构时，require 会先查询 package.json 中的 main，未发现则尝试加载路径下的 index.js 或 index.json。

     若引用路径不是 ./ 或 ../ 开头，并且非基础模块，require 则先在启动路径查找，然后从当前模块所在路径下的 .modules 查找，并上级目录递归。

     @param id 指定要加载的模块名称
     @return 返回加载模块的引出对象
     */
    static Value require(String id);

    /*! @brief 强制要求进行垃圾回收*/
    static GC();
};
