#!/bin/bash

if [ $# -lt 1 ]; then
	echo ""
	echo "build [Release | Release32 | Debug | Debug32 | clean]"
	echo ""
	exit 0
fi

OS=`uname`

FIBJS_PATH=`pwd`
OUT_PATH=${FIBJS_PATH}/../out
BIN_PATH=${FIBJS_PATH}/../bin/${OS}_$1

if [ $1 = 'clean' ]; then
	if [ -e "${OUT_PATH}" ]; then
		rm -rf "${OUT_PATH}/${OS}_Release"
		rm -rf "${OUT_PATH}/${OS}_Debug"
		rm -rf "${OUT_PATH}/${OS}_Release32"
		rm -rf "${OUT_PATH}/${OS}_Debug32"
	fi

	exit 0
fi

if [ $1 != 'Release' ] && [ $1 != 'Release32' ] && [ $1 != 'Debug' ] && [ $1 != 'Debug32' ]; then
	echo ""
	echo "build [Release | Release32 | Debug | Debug32 | clean]"
	echo ""
	exit 0
fi

if [ ! -e "${OUT_PATH}" ]; then
	mkdir "${OUT_PATH}"
fi

OUT_PATH=${OUT_PATH}/${OS}_$1
if [ ! -e ${OUT_PATH} ]; then
	mkdir ${OUT_PATH}
fi

OUT_PATH=${OUT_PATH}/fibjs
if [ ! -e ${OUT_PATH} ]; then
	mkdir ${OUT_PATH}
fi

GIT_INFO=`git log -n 1 --pretty=format:"%H"`

cd ${OUT_PATH}
cmake -DBUILD_TYPE=$1 -DGIT_INFO=$GIT_INFO ${FIBJS_PATH} > CMake.log
if [ $? != 0 ]; then
	exit 1
fi

if [ ! "$BUILD_JOBS" = "" ]; then
	sh -c "${BUILD_VERBOSE} make -j${BUILD_JOBS}"
else
	sh -c "${BUILD_VERBOSE} make"
fi
if [ $? != 0 ]; then
	exit 1
fi

if [ $1 = 'Release' ] || [ $1 = 'Release32' ]; then
	cd ${BIN_PATH}
	cp "${FIBJS_PATH}/installer.txt" "installer.sh"
	cp fibjs js
	strip js -o fibjs
	tar -zcf fibjs.tar.gz fibjs
	cat fibjs.tar.gz >> installer.sh
	chmod 777 installer.sh
	rm fibjs*
	mv js fibjs
fi

cd ${FIBJS_PATH}
